#!/bin/bash

#-------------------------------------------------------------------------------
# Description: Find and remove orphaned snap packages on a Linux system, unless they serve as a default provider for another snap package
# Licensing: This code is released under the MIT License. For more information, see <https://opensource.org/licenses/MIT>.
# Copyright (c) 2024 Mario Herrmann. All rights reserved.
#-------------------------------------------------------------------------------

# Find orphaned snaps and check if orphaned snaps are default providers
orphan=$(snap connections --all | grep -E 'content' | grep -vE 'themes|slot' | awk '$2 == "-" {print $3}' | cut -d: -f 1)
for o in $orphan; do
  plug=$(snap connections $o | grep -E 'content' | awk '$2!= "-" {print $2}' | cut -d: -f 1 | sort -u)
done
provider=$(grep "default-provider:" /snap/*/*/meta/snap.yaml | awk '{print $NF}' | sort -u)

if [ -z "$orphan" ]; then
    echo "No orphaned snaps found." 
  elif [[ $provider =~ $orphan ]]; then
  echo "Snap $orphan has no dependencies, but it is the default provider for snap $plug and therefore cannot be uninstalled."
else
  # Remove orphaned snaps
  sudo snap remove $orphan
  if [ $? -ne 0 ]; then
    echo "Error removing snap $orphan"
  fi
fi

# Find base snaps and check if base snaps are used by other snaps
corephan=$(snap list --all | grep -E 'base' | awk '{print $1}' | cut -d: -f 1)
for o in $orphan; do
  bplug=$(grep "base:" /snap/*/*/meta/snap.yaml | cut -d '/' -f 3 | awk '{print $NF}' | sort -u)
done
base=$(grep "base:" /snap/*/*/meta/snap.yaml | awk '{print $NF}' | sort -u)

if [[ $base =~ $corephan ]]; then
  echo "$base is base for snap $bplug and therefore cannot be uninstalled."
else
  # Remove base snaps
  sudo snap remove $corephan
  if [ $? -ne 0 ]; then
    echo "Error removing snap $corephan"
  fi
fi